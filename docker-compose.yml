#         _               _
#    __ _| |__   ___  ___| |_
#   / _` | '_ \ / _ \/ __| __/
#  | (_| | | | | (_) \__ \ |_
#   \__, |_|_|_|\___/|___/\__|
#   |___/      /   _ \
#          (¯\| o (@) |/¯)
#           \_  .___.  _/
#            /   !_!   \
#           /_.--._.--._\

version: "3"

services:
  transmission:
    image: ghostserverd/transmission-combustion
    container_name: transmission
    restart: always
    ports:
      - "${TRANS_WEBUI_PORT}:5656"
      - "${TRANS_CONNECTION_PORT}:51413"
      - "${TRANS_CONNECTION_PORT}:51413/udp"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TRANS_WEBUI_USER=${TRANS_WEBUI_USER}
      - TRANS_WEBUI_PASS=${TRANS_WEBUI_PASS}
      - TRANS_WEBUI_PORT=${TRANS_WEBUI_PORT}
      - TRANS_MAX_RETENTION=${TRANS_MAX_RETENTION}
      - TRANS_MAX_RATIO=${TRANS_MAX_RATIO}
      - TRANS_CONNECTION_PORT=${TRANS_CONNECTION_PORT}
      - FILEBOT_PORT=${FILEBOT_PORT}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/transmission:/config
      - ${DOWNLOAD_DIR}:/downloads
      - ${MEDIA_DIR}:/media

  filebot:
    image: ghostserverd/filebot
    container_name: filebot
    restart: always
    ports:
      - "${FILEBOT_PORT}:${FILEBOT_PORT}"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - FILEBOT_PORT=${FILEBOT_PORT}
      - FILEBOT_FORMAT=${FILEBOT_FORMAT}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/filebot:/config
      - ${DOWNLOAD_DIR}:/downloads
      - ${MEDIA_DIR}:/media

  nzbget:
    image: ghostserverd/nzbget
    container_name: nzbget
    restart: always
    ports:
      - "${NZBGET_PORT}:6789"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - FILEBOT_PORT=${FILEBOT_PORT}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/nzbget:/config
      - ${DOWNLOAD_DIR}/nzb:/downloads/nzb

  sonarr:
    image: ghostserverd/sonarr
    container_name: sonarr
    restart: always
    ports:
      - "${SONARR_PORT}:8989"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/sonarr:/config
      - ${DOWNLOAD_DIR}:/data/completed/tv/
      - ${TV_DIR}:/tv

  radarr:
    image: ghostserverd/radarr
    container_name: radarr
    restart: always
    ports:
      - "${RADARR_PORT}:7878"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${DOWNLOAD_DIR}:/data/completed/movies/
      - ${MOVIES_DIR}:/movies

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    restart: always
    ports:
      - "${BAZARR_PORT}:6767"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/bazarr:/config
      - ${TV_DIR}:/tv
      - ${MOVIES_DIR}:/movies

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: always
    ports:
      - "${JACKETT_PORT}:9117"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - JACKETT_KEY=0000
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/jackett:/config
      - ${CONFIG_DIR}/jackett/downloads:/downloads

  plex:
    image: ghostserverd/plex
    container_name: plex
    restart: always
    ports:
      - "${PLEX_WEB_PORT}:32400"
      - "1900:1900"
      - "3005:3005"
      - "5353:5353"
      - "8324:8324"
      - "32410:32410"
      - "32412:32412"
      - "32413:32413"
      - "32414:32414"
      - "32469:32469"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=latest
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/plex:/config
      - ${MEDIA_DIR}:/data
    devices:
      - "/dev/dri/card0:/dev/dri/card0"
      - "/dev/dri/renderD128:/dev/dri/renderD128"

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    restart: always
    ports:
      - "${TAUTULLI_PORT}:8181"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/tautulli:/config
      - "${CONFIG_DIR}/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro"

  acestream:
    image: ikatson/aceproxy
    container_name: acestream
    restart: always
    ports:
      - "${ACESTREAM_PORT}:8000"

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    ports:
      - "${HEIMDALL_PORT}:80"
      - "${HEIMDALL_SSL_PORT}:443"
    volumes:
      - ${CONFIG_DIR}/heimdall:/config

  letsencrypt:
    image: ghostserverd/letsencrypt
    container_name: letsencrypt
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ${CONFIG_DIR}/letsencrypt:/config
    restart: always
    depends_on:
      - sonarr
      - radarr
      - nzbget
      - transmission
      - plex
      - tautulli
      - netdata
      - heimdall
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - EMAIL=${LE_EMAIL}
      - URL=${LE_HOSTNAME}
      - SUBDOMAINS=${LE_SUBDOMAINS}
      - TZ=${TIMEZONE}

  ddclient:
    image: linuxserver/ddclient
    container_name: ddclient
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/ddclient:/config
    restart: always

  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    ports:
      - "${PORTAINER_PORT}:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_DIR}/portainer:/data

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: ${LE_HOSTNAME}
    ports:
      - "${NETDATA_PORT}:19999"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw

  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    command: --cleanup
    restart: always
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
